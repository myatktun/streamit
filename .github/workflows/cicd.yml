name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN}}
    - name: Terraform Format
      id: fmt
      run: terraform -chdir=./infra/prod fmt -check
    - name: Terraform Init
      id: init
      run: terraform -chdir=./infra/prod init
    - name: Terraform Validate
      id: validate
      run: terraform -chdir=./infra/prod validate -no-color
    - name: Terraform Plan
      id: plan
      run: terraform -chdir=./infra/prod plan -no-color -input=false
      continue-on-error: true
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform -chdir=./infra/prod apply -auto-approve -input=false

  build:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "16.16.0"
        cache: "yarn"
    - name: Install Dependencies
      run: yarn install --frozen-lockfile
    - name: Build Projects
      run: yarn build:all
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ap-southeast-1
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and Push Docker Images
      env:
        ECR_TAG: ${{secrets.ECR_TAG}}
      run: yarn deploy:all

  deploy:
    needs: [terraform, build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN}}
    - name: Terraform Format
      id: fmt
      run: terraform -chdir=./infra/apps fmt -check
    - name: Terraform Init
      id: init
      run: terraform -chdir=./infra/apps init
    - name: Terraform Validate
      id: validate
      run: terraform -chdir=./infra/apps validate -no-color
    - name: Terraform Plan
      id: plan
      run: terraform -chdir=./infra/apps plan -no-color -input=false
      continue-on-error: true
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform -chdir=./infra/apps apply -auto-approve -input=false
